#
# This Runner deploys or update the DEV-infrastucture on a server
# 
#   - Check out the code from the repository
#   - Extract the server IP from terraform variables.tf 
#   - Set up SSH with the private key or password to server
#   - Copy the script "infra/scripts/deploy-on-dts.sh" to server
#   - Run the script "infra/scripts/deploy-on-dts.sh" on server
# 

name: Deploy-DEV

on:
  push:
    branches: [dev-branch]
    paths:  # Only triggers on changes
      - 'infra/**'
      - 'monitoring/**'
      - .github/workflows/Deploy-DEV.yml
        
jobs:

#------------------------------------------------------------------------------
  Job-1-Deploy-DEV:

    runs-on: ubuntu-latest

    steps:

    # Check out the code from the repository
    - name: Checkout code from the repository
      uses: actions/checkout@v3


    # Extract the server IP from terraform variables.tf 
    - name: Extract Server IP
      id: extract_ip
      run: |
        SERVER_IP=$(grep -A 3 -E '^variable "server_ip_tf"' infra/terraform/variables.tf | grep 'default' | sed -n 's/.*default *= *"\([^"]*\)".*/\1/p')
        echo "SERVER_IP=${SERVER_IP}"
        echo "##[set-output name=server_ip;]${SERVER_IP}"
        echo "Extracted Server IP: ${SERVER_IP}"


    # Log in via SSH using password to the Server
    - name: Install sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass

    - name: Log in via SSH using password
      run: |
        sshpass -p "${{ secrets.SSH_ALEX_SERVER_PW }}" ssh -o StrictHostKeyChecking=no ubuntu@${{ steps.extract_ip.outputs.server_ip }} 'echo "Logged in successfully!"'


    # Copy the script "infra/scripts/deploy-on-server.sh" to the Server
    - name: Copy script to server
      run: |
        echo "Copy script to server with IP: ${{ steps.extract_ip.outputs.server_ip }}"
        sshpass -p "${{ secrets.SSH_ALEX_SERVER_PW }}" scp -o StrictHostKeyChecking=no infra/scripts/deploy-on-server.sh ubuntu@${{ steps.extract_ip.outputs.server_ip }}:/home/ubuntu/


    # Run the script "infra/scripts/deploy-on-server.sh" on the Server
    - name: Run script via SSH
      run: |
        SERVER_IP=${{ steps.extract_ip.outputs.server_ip }}
        echo "Deploying to server with IP: $SERVER_IP"
        sshpass -p "${{ secrets.SSH_ALEX_SERVER_PW }}" ssh -o StrictHostKeyChecking=no -o LogLevel=ERROR ubuntu@$SERVER_IP << 'EOF'
          echo "${{ secrets.SSH_ALEX_SERVER_PW }}" | sudo -S chmod +x /home/ubuntu/deploy-on-server.sh
          echo "${{ secrets.SSH_ALEX_SERVER_PW }}" | sudo -S /home/ubuntu/deploy-on-server.sh
        EOF
