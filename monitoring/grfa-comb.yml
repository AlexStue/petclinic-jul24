# 
# 1. Deployment
# 2. Service as NodePort: 32000
# kubectl describe deployment grafana-deployment -n monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - name: grafana
          containerPort: 3000
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
          requests: 
            memory: 500M
            cpu: "500m"

        # env:
        #   - name: GF_DASHBOARDS_JSON_ENABLED
        #     value: "true"
        #   - name: GF_DASHBOARDS_JSON_PATH
        #     value: "/var/lib/grafana/dashboards/*.json"
          # - name: SIDECAR_DASHBOARD_LABEL
          #   value: grafana_dashboard
          # - name: SIDECAR_DASHBOARD_LABEL_VALUE
          #   value: "1"
          # - name: SIDECAR_SEARCH_NAMESPACE
          #   value: "ALL"

        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-configmap
            readOnly: false
          # - mountPath: /var/lib/grafana/dashboards
          #   name: grafana-dashboards

      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-configmap
          configMap:
              defaultMode: 420
              name: grafana-configmap
---












# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: grafana-deployment
#   namespace: monitoring
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: grafana
#   template:
#     metadata:
#       name: grafana
#       labels:
#         app: grafana
#     spec:
#       containers:
#       - name: grafana
#         image: grafana/grafana:latest
#         ports:
#         - name: grafana
#           containerPort: 3000
#         resources:
#           limits:
#             memory: "1Gi"
#             cpu: "1000m"
#           requests: 
#             memory: 500M
#             cpu: "500m"
#         volumeMounts:
#           - mountPath: /var/lib/grafana
#             name: grafana-storage
#           - mountPath: /etc/grafana/provisioning/datasources
#             name: grafana-datasources
#             readOnly: false
#       volumes:
#         - name: grafana-storage
#           emptyDir: {}
#         - name: grafana-datasources
#           configMap:
#               defaultMode: 420
#               name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3000'
spec:
  selector: 
    app: grafana
  type: NodePort  
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000
---