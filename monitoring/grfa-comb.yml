# 
# 1. Deployment
# 2. Service as NodePort: 32000
# kubectl describe deployment grafana-deployment -n monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_DASHBOARDS_JSON_ENABLED
              value: "true"
            - name: GF_DASHBOARDS_JSON_PATH
              value: "/var/lib/grafana/dashboards/*.json"
          volumeMounts:
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards

        - name: grafana-dashboard-sidecar
          image: grafana/dashboard-sidecar:latest
          env:
            - name: SIDECAR_DASHBOARD_LABEL
              value: grafana_dashboard   # The label that the sidecar should look for
            - name: SIDECAR_DASHBOARD_LABEL_VALUE
              value: "1"                 # The label value to filter by
            - name: SIDECAR_SEARCH_NAMESPACE
              value: "ALL"               # Set to ALL to search all namespaces
          volumeMounts:
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards

      volumes:
        - name: dashboards
          configMap:
            name: grafana-dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3000'
spec:
  selector: 
    app: grafana
  type: NodePort  
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000
---